{"version":3,"sources":["components/CitySelect/styles.tsx","config.ts","components/CitySelect/index.tsx","components/WeatherCard/styles.tsx","components/WeatherCard/index.tsx","components/WeatherBlock/styles.tsx","components/WeatherBlock/WeatherBlockOnSevenDays/styles.tsx","images/placeholder-icon.svg","utils.ts","api/index.ts","components/WeatherBlock/hooks.ts","redux/weather/actions.ts","components/WeatherBlock/WeatherBlockOnSevenDays/index.tsx","components/WeatherBlock/WeatherBlockOnSevenDays/hooks.ts","components/Input/styles.tsx","components/Input/index.tsx","components/WeatherBlock/WeatherBlockOfThePast/styles.tsx","redux/weather/selectors.ts","components/WeatherBlock/WeatherBlockOfThePast/hooks.ts","components/WeatherBlock/WeatherBlockOfThePast/index.tsx","pages/styles.tsx","pages/MainPage/index.tsx","images/background-bottom.png","images/background-top.png","styles.tsx","App.tsx","redux/weather/reducer.ts","redux/store.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["Select","styled","select","isCitySelected","Option","option","CITIES","name","value","APP_ID","renderCity","CitySelect","city","selectCity","onChange","placeholder","selected","disabled","map","WeatherCardInner","div","width","Date","Icon","img","heightIcon","Degrees","WeatherCard","date","weather","sign","temp","src","icon","WeatherBlock","WeatherTitle","h1","EmptyWeatherBlock","EmptyWeatherIcon","EmptyWeatherPlaceholder","p","WeatherContentWrapper","ArrowControlLeft","button","ArrowControlRight","formatDate","toISOString","slice","formatDateDailyWeather","toLocaleDateString","day","month","year","toLowerCase","mapDailyWeather","dt","Math","round","getWeather","a","axios","get","data","daily","getWeatherOfDay","formattedDay","getTime","current","useWeatherFields","useState","setCity","setDate","event","target","selectDate","saveWeathers","createAction","saveWeather","renderWeather","WeatherBlockOnSevenDays","weathers","useEffect","then","useWeatherList","isCommon","useMediaQuery","isMobile","PAGE_SIZE_BY_DEVICE","position","updatePosition","pageSize","updatePageSize","list","next","prev","usePagination","onClick","length","placeholderIcon","Input","input","DateInput","React","type","changeType","today","minDate","getDate","maxDate","onFocus","onBlur","onKeyDown","min","max","required","WeatherSelectBlock","withWeatherList","createSelector","state","useWeatherOfDayApi","cached","dispatch","useDispatch","d","WeatherBlockOfThePast","weatherList","useSelector","useWeatherByDate","formatDateDisplay","PageContainer","PageTitle","header","PageTitleWord","props","lineHeight","textAlign","PageFooter","footer","WeathersBlocks","MainPage","AppBody","backgroundBottom","backgroundTop","Container","App","weatherReducer","handleActions","payload","samara","reducers","combineReducers","enhancer","applyMiddleware","thunkMiddleware","persistConfig","key","storage","store","createStore","persistReducer","persistor","persistStore","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Global","createGlobalStyle","ReactDOM","render","loading","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2d8a337b.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Select = styled.select < { isCitySelected: boolean } > `\n  display: block;\n  color: ${({ isCitySelected }) => isCitySelected ? '#2C2D76' : '#8083A4'};\n  font-size: 16px;\n  height: 48px;\n  padding: 13px 34px 13px 10px;\n  margin-left: 4px;\n  width: 251px;\n  max-width: 100%;\n  border: 2px solid rgba(128, 131, 164, 0.2);\n  border-radius: 8px;\n  outline: none;\n  background: rgba(128, 131, 164, 0.06);\n  transition: background-color 0.7s ease;\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n    border: 2px solid #8083A4;\n  }\n\n  &:active {\n    border: 2px solid #373AF5;\n  }\n\n  @media ${'(max-width: 730px)'} {\n    margin-left: 0px;\n    width: 100%;\n  }\n`\n\nexport const Option = styled.option`\n  color:#2C2D76;\n  background-color: #fff;\n  border-radius: 5px;\n`\n","export type City = {\n    name: string\n    value: string\n}\n\nexport const CITIES: City[] = [\n    { name: 'Samara', value: 'lat=53.19&lon=50.10' },\n    { value: 'lat=53.50&lon=49.42', name: 'Toliatty' },\n    { value: 'lat=51.53&lon=46.03', name: 'Saratov' },\n    { value: 'lat=55.79&lon=49.10', name: 'Kazan' },\n    { value: 'lat=45.03&lon=38.97', name: 'Krasnodar' },\n]\n\nexport const APP_ID = '04160438ae6d577745ad287cda3d9bca'","import React from 'react'\nimport { Select, Option } from './styles'\n\nimport { CITIES, City } from '../../config'\n\nconst renderCity = ({ value, name }: City) => <Option key={value} value={value}>{name}</Option>\n\nexport const CitySelect: React.FC<ICitySelect> = ({ city, selectCity }) => (\n  <Select value={city} onChange={selectCity} placeholder=\"Select city\" isCitySelected={!!city}>\n    <Option selected={!city} disabled>Select city</Option>\n    {CITIES.map(renderCity)}\n  </Select>\n)\n","import styled from 'styled-components'\n\nexport const WeatherCardInner = styled.div < { width: string } > `\n  background-color: #373AF5;\n  border-radius: 6px;\n  width: ${({ width }) => width};\n  height: 237px;\n  padding: 20px 21px 24px 19px;\n  margin: 55px 5px 0px 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media ${'(max-width: 730px)'} {\n    margin-top: 30px;\n  }\n  \n  @media ${'(max-width: 359px)'} {\n    border: 2px solid #2C2D76;\n    margin-right: 16px;\n  }\n`\n\nexport const Date = styled.div`\n  font-weight: 700;\n  text-transform: lowercase;\n`\n\nexport const Icon = styled.img < { heightIcon: string } > `\n  height: ${({ heightIcon }) => heightIcon};\n  align-self: center;\n`\n\nexport const Degrees = styled.div`\n  font-size: 32px;\n  font-weight: 700;\n  align-self: flex-end;\n`\n","import { FC } from 'react'\nimport { WeatherCardInner, Date, Degrees, Icon } from './styles'\n\nexport const WeatherCard: FC<IWeatherCard> = ({ date, weather, width, heightIcon }) => {\n  const sign: string = (weather.temp > 0) ? '+' : ''\n\n  return (\n    <WeatherCardInner width={width}>\n      <Date>{date}</Date>\n      <Icon heightIcon={heightIcon} src={`http://openweathermap.org/img/wn/${weather.icon}.png`} />\n      <Degrees>{sign}{weather.temp}°</Degrees>\n    </WeatherCardInner>\n  )\n}\n","import styled from 'styled-components'\n\nexport const WeatherBlock = styled.div`\n  width: 660px;\n  height: 524px;\n  padding: 54px 54px;\n  background: #fff;\n  box-shadow: 0px 4px 4px rgba(4, 5, 73, 0.25), 14px 14px 20px rgba(5, 6, 114, 0.2);\n  border-radius: 8px;\n\n  @media ${'(max-width: 1470px)'} {\n    margin-bottom: 34px;\n  }\n  \n  @media ${'(max-width: 730px)'} {\n    width: 100%;\n    padding: 32px 54px 60px 54px;\n    height: auto;\n  }\n\n  @media ${'(max-width: 359px)'} {\n    padding: 32px 24px 60px 24px;\n    margin-bottom: 10px;\n  }\n`\n\nexport const WeatherTitle = styled.h1`\n  margin-bottom: 36px;\n  margin-left: 4px;\n  color: #2C2D76;\n  font-weight: bold;\n  font-size: 32px;\n\n  @media ${'(max-width: 730px)'} {\n    margin-left: 0px;\n    line-height: 32px;\n  }\n  \n  @media ${'(max-width: 390px)'} {\n    margin-left: 0px;\n    line-height: 32px;\n    font-size: 25px;\n  }\n`\n\nexport const EmptyWeatherBlock = styled.div`\n  font-weight: bold;\n  text-align: center;\n  margin-top: 60px;\n`\n\nexport const EmptyWeatherIcon = styled.img`\n  margin-bottom: 22px;\n`\n\nexport const EmptyWeatherPlaceholder = styled.p`\n  color:#8083A4;\n`\n","import styled from 'styled-components'\n\nexport const WeatherContentWrapper = styled.div`\n  display: flex;\n\n  @media ${'(max-width: 705px)'} {\n    overflow-y: hidden;\n  }\n`\n\nexport const ArrowControlLeft = styled.button`\n  position: relative;\n  top: 21px;\n  left: -33px;\n  border: none;\n  outline: none;\n  opacity: 0.6;\n\n  @media ${'(max-width: 705px)'} {\n    display: none;\n  }\n\n  &:hover {\n      cursor: pointer;\n      opacity: 1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    display: block;\n    border-right: solid 2px #8083A4;\n    border-top: solid 2px #8083A4;\n    width: 10px;\n    height: 10px;\n    transform: translate(12px, 0px) rotate(-135deg);\n  }\n`\n\nexport const ArrowControlRight = styled.button`\n  position: relative;\n  top: 21px;\n  right: 1px;\n  border: none;\n  outline: none;\n  opacity: 0.6;\n\n  @media ${'(max-width: 705px)'} {\n    display: none;\n  }\n\n  &:hover {\n      cursor: pointer;\n      opacity: 1;\n  }\n  \n  &:after {\n    content: '';\n    position: absolute;\n    display: block;\n    border-right: solid 2px #8083A4;\n    border-top: solid 2px #8083A4;\n    width: 10px;\n    height: 10px;\n    transform: translate(8px, 0px) rotate(45deg);\n  }\n`\n","export default __webpack_public_path__ + \"static/media/placeholder-icon.1a743710.svg\";","export const formatDate = (date: Date): string => date.toISOString().slice(0, 10) // \"2021-05-22\"\n\nexport const formatDateDisplay = (date: string | undefined): string | undefined => {\n  if (date) {\n    return new Date(date).toLocaleDateString('en-GB', { day: 'numeric', month: 'long', year: 'numeric' }).toLowerCase() + '' // 22 may 2021\n  }\n}\n\nexport const formatDateDailyWeather = (date: number): string => new Date(date * 1000).toLocaleDateString('en-GB', { day: 'numeric', month: 'long', year: 'numeric' }).toLowerCase() + '' // 22 may 2021\n","import axios from 'axios'\nimport { APP_ID } from '../config'\nimport { formatDateDailyWeather } from '../utils'\n\nexport type Weather = {\n  date: string\n  temp: number\n  icon: string\n}\n\nexport type WeatherData = {\n  city: string\n  date: string\n  weather: Weather\n}\n\nconst mapDailyWeather = (day: DailyWeather): Weather => ({\n  date: formatDateDailyWeather(day.dt),\n  temp: Math.round(day.temp.day),\n  icon: day.weather[0].icon\n})\n\nexport const getWeather = async (city: string): Promise<Weather[]> => {\n  const { data } = await axios.get<{}, WeatherListResponse>(`https://api.openweathermap.org/data/2.5/onecall?${city}&exclude=current,minutely,hourly,alerts&units=metric&appid=${APP_ID}`)\n\n  return data.daily.map(mapDailyWeather)\n}\n\nconst mapWeather = (day: CurrentWeather): Weather => ({\n  date: formatDateDailyWeather(day.dt),\n  temp: Math.round(day.temp),\n  icon: day.weather[0].icon\n})\n\nexport const getWeatherOfDay = async (city: string, date: string): Promise<WeatherData> => {\n  const formattedDay: number = new Date(date).getTime() / 1000\n  const { data } = await axios.get<{}, CurrentWeatherResponse>(`https://api.openweathermap.org/data/2.5/onecall/timemachine?${city}&dt=${formattedDay}&units=metric&appid=${APP_ID}`)\n\n  return {\n    city,\n    date,\n    weather: mapWeather(data.current),\n  }\n}","import { useState } from 'react'\n\nexport const useWeatherFields = () => {\n  const [city, setCity] = useState<string>()\n  const selectCity = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    setCity(event.target.value)\n  }\n\n  const [date, setDate] = useState<string>()\n  const selectDate = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setDate(event.target.value)\n  }\n\n  return {\n    city,\n    selectCity,\n    date,\n    selectDate\n  }\n}\n\n\n","import { createAction } from 'redux-actions'\n\nexport const saveWeathers = createAction('weathers/save')\nexport const saveWeather = createAction('weather/save')\n","import { FC } from 'react'\nimport { CitySelect } from '../../CitySelect'\nimport { WeatherCard } from '../../WeatherCard'\nimport { WeatherBlock, WeatherTitle, EmptyWeatherBlock, EmptyWeatherIcon, EmptyWeatherPlaceholder } from '../styles'\nimport { WeatherContentWrapper, ArrowControlLeft, ArrowControlRight } from './styles'\nimport placeholderIcon from '../../../images/placeholder-icon.svg'\n\nimport { useWeatherList, usePagination } from './hooks'\n\nconst renderWeather = (day: IWeatherToDisplay) => <WeatherCard key={day.date} date={day.date} weather={day} heightIcon=\"115px\" width=\"174px\" />\n\nexport const WeatherBlockOnSevenDays: FC = () => {\n  const { city, selectCity, weathers } = useWeatherList()\n  const { position, next, prev, list, pageSize } = usePagination(weathers)\n\n  return (\n    <WeatherBlock>\n      <WeatherTitle>7 Days Forecast</WeatherTitle>\n      <CitySelect city={city} selectCity={selectCity} />\n      {weathers && list\n        ? (\n          <WeatherContentWrapper>\n            <ArrowControlLeft disabled={position === 0} onClick={prev} />\n            {list.map(renderWeather)}\n            <ArrowControlRight disabled={position === weathers.length - pageSize} onClick={next} />\n          </WeatherContentWrapper>\n          )\n        : (\n          <EmptyWeatherBlock>\n            <EmptyWeatherIcon src={placeholderIcon}></EmptyWeatherIcon>\n            <EmptyWeatherPlaceholder>Fill in all the fields and the weather will be displayed</EmptyWeatherPlaceholder>\n          </EmptyWeatherBlock>\n          )\n      }\n    </WeatherBlock>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { useMediaQuery } from 'beautiful-react-hooks'\nimport { Weather, getWeather } from '../../../api'\nimport {useWeatherFields} from '../hooks'\nimport { useDispatch } from 'react-redux'\nimport { saveWeathers } from '../../../redux/weather/actions'\n\nexport const useWeatherList = () => {\n  const [weathers, saveWeathers] = useState<Weather[]>()\n  const { city, selectCity } = useWeatherFields()\n\n  useEffect(() => {\n    if (city) {\n      getWeather(city).then(saveWeathers)\n    }\n  }, [city])\n\n  return { weathers, city, selectCity }\n}\n\nexport const usePagination = (weathers?: Weather[]) => {\n  const isCommon: boolean = useMediaQuery('(min-width: 706px)')\n  const isMobile: boolean = useMediaQuery('(max-width: 705px)')\n\n  const PAGE_SIZE_BY_DEVICE = {\n    COMMON: 3,\n    MOBILE: 7\n  }\n\n  const [position, updatePosition] = useState(0)\n  const [pageSize, updatePageSize] = useState(PAGE_SIZE_BY_DEVICE.COMMON)\n\n  const next = () => {\n    updatePosition(position + 1)\n  }\n\n  const prev = () => {\n    updatePosition(position - 1)\n  }\n\n  useEffect(() => {\n    if (isMobile) {\n      updatePageSize(PAGE_SIZE_BY_DEVICE.MOBILE)\n    }\n\n    if (isCommon) {\n      updatePageSize(PAGE_SIZE_BY_DEVICE.COMMON)\n    }\n  }, [isCommon, isMobile])\n\n  const list = weathers ? weathers.slice(position, position + pageSize) : []\n\n  return {\n    position,\n    next,\n    prev,\n    list,\n    pageSize\n  }\n}\n\nexport const useWeatherListApi = (city?: string) => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (city) {\n      getWeather(city).then(d => dispatch(saveWeathers(d)))\n    }\n  }, [city])\n}","import styled from 'styled-components'\n\nexport const Input = styled.input`\n  width: 251px;\n  max-width: 100%;\n  height: 48px;\n  margin-right: 5px;\n  border: 2px solid rgba(128, 131, 164, 0.2);\n  border-radius: 8px;\n  outline: none;\n  font-size: 16px;\n  font-weight: 400;\n  color:#8083A4;\n  padding: 14px 9px 13px 15px;\n  background: rgba(128, 131, 164, 0.06);\n\n  &:hover {\n    border: 2px solid #8083A4;\n  }\n\n  &:active {\n    border: 2px solid #373AF5;\n  }\n  \n  &::placeholder {\n    color:#8083A4;\n    font-weight: 400;\n  }\n  \n  @media ${'(max-width: 730px)'} {\n    width: 100%;\n    margin-top: 24px;\n  }\n`\n","import React from 'react'\nimport { Input } from './styles'\nimport { formatDate } from '../../utils'\n\nexport const DateInput: React.FC<IDateInput> = ({ date, selectDate }) => {\n  const [type, changeType] = React.useState('text')\n\n  const setFieldToDate = () => {\n    if (type !== 'date') {\n      changeType('date')\n    }\n  }\n\n  const setFieldToText = () => {\n    if (!date && type !== 'text') {\n      changeType('text')\n    }\n  }\n\n  const today = new Date()\n\n  const minDate: string = formatDate(new Date(new Date().setDate(today.getDate() - 5)))\n  const maxDate: string = formatDate(today)\n\n  return (\n    <Input\n      onChange={selectDate}\n      onFocus={setFieldToDate}\n      onBlur={setFieldToText}\n      onKeyDown={() => {}}\n      type={type}\n      min={minDate}\n      max={maxDate}\n      value={date}\n      placeholder=\"Select date\"\n      required\n    />\n  )\n}\n","import styled from 'styled-components'\n\nexport const WeatherSelectBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media ${'(max-width: 730px)'} {\n    flex-direction: column;\n  }\n`\n","import { createSelector } from 'reselect'\nimport { WeatherState } from './types'\n\nconst weatherSelector = (state: any): WeatherState => state.weather\n\nexport const withWeatherList = createSelector(weatherSelector, ({ list }) => list)\n","import { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { withWeatherList } from '../../../redux/weather/selectors'\nimport {useWeatherFields} from '../hooks'\nimport { saveWeather } from '../../../redux/weather/actions'\nimport { getWeatherOfDay } from '../../../api'\n\nexport const useWeatherByDate = () => {\n  const { city, selectCity, date, selectDate } = useWeatherFields()\n  const weatherList = useSelector(withWeatherList)\n  // @ts-ignore\n  const weather = city && date && weatherList?.[city]?.[date]\n\n  useWeatherOfDayApi(city, date, !!weather)\n\n  return { weather, city, selectCity, date, selectDate }\n}\n\nexport const useWeatherOfDayApi = (city?: string, date?: string, cached?: boolean) => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (city && date && !cached) {\n      getWeatherOfDay(city, date).then(d => dispatch(saveWeather(d)))\n    }\n  }, [city, date])\n}","import { FC } from 'react'\n\nimport { DateInput } from '../../Input'\nimport { CitySelect } from '../../CitySelect'\nimport { WeatherCard } from '../../WeatherCard'\nimport { WeatherBlock, WeatherTitle, EmptyWeatherBlock, EmptyWeatherIcon, EmptyWeatherPlaceholder } from '../styles'\nimport { WeatherSelectBlock } from './styles'\nimport placeholderIcon from '../../../images/placeholder-icon.svg'\nimport { formatDateDisplay } from '../../../utils'\n\nimport { useWeatherByDate } from './hooks'\n\nexport const WeatherBlockOfThePast: FC = () => {\n  const { city, selectCity, date, selectDate, weather } = useWeatherByDate()\n  const formatDate: string | undefined = formatDateDisplay(date)\n\n  return (\n    <WeatherBlock>\n      <WeatherTitle>Forecast for a Date in the Past</WeatherTitle>\n      <WeatherSelectBlock>\n        <CitySelect city={city} selectCity={selectCity} />\n        <DateInput date={date} selectDate={selectDate} />\n      </WeatherSelectBlock>\n      {weather\n        ? (\n          <WeatherCard\n            date={formatDate}\n            weather={weather}\n            heightIcon=\"146px\"\n            width=\"98.5%\"\n          />\n          )\n        : (\n          <EmptyWeatherBlock>\n            <EmptyWeatherIcon src={placeholderIcon} />\n            <EmptyWeatherPlaceholder>Fill in all the fields and the weather will be displayed</EmptyWeatherPlaceholder>\n          </EmptyWeatherBlock>\n          )\n      }\n    </WeatherBlock>\n  )\n}\n","import styled from 'styled-components'\n\nexport const PageContainer = styled.div``\n\nexport const PageTitle = styled.header`\n  width: 775px;\n  margin: 0 auto 72px auto;\n\n  @media ${'(max-width: 880px)'} {\n    width: 100%;\n  }\n\n  @media ${'(max-width: 730px)'} {\n    width: 245px;\n    margin-bottom: 24px;\n  }\n`\n\nexport const PageTitleWord = styled.h1 < { lineHeight: string, textAlign: string } > `\n  font-weight: bold;\n  font-size: 102px;\n  line-height: ${props => props.lineHeight};\n  text-align: ${props => props.textAlign};\n\n  @media ${'(max-width: 730px)'} {\n    font-size: 32px;\n    line-height: 32px;\n  }\n`\n\nexport const PageFooter = styled.footer`\n  color: #fff;\n  margin-top: 199px;\n  text-align: center;\n  font-size: 14px;\n  line-height: 18px;\n  opacity: 0.6;\n  \n  @media ${'(max-width: 1470px)'} {\n    margin-top: 12px;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { WeatherBlockOnSevenDays } from '../../components/WeatherBlock/WeatherBlockOnSevenDays'\nimport { WeatherBlockOfThePast } from '../../components/WeatherBlock/WeatherBlockOfThePast'\nimport { PageContainer, PageTitle, PageTitleWord, PageFooter } from '../styles'\n\nconst WeathersBlocks = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media ${'(max-width: 1470px)'} {\n    flex-direction: column;\n    align-items: center;\n  }\n`\n\nexport const MainPage = () => (\n  <PageContainer>\n    <PageTitle>\n      <PageTitleWord lineHeight=\"83px\" textAlign=\"left\">Weather</PageTitleWord>\n      <PageTitleWord lineHeight=\"97px\" textAlign=\"right\">forecast</PageTitleWord>\n    </PageTitle>\n    <WeathersBlocks>\n      <WeatherBlockOnSevenDays />\n      <WeatherBlockOfThePast />\n    </WeathersBlocks>\n    <PageFooter>C ЛЮБОВЬЮ ОТ MERCURY DEVELOPMENT</PageFooter>\n  </PageContainer>\n)\n","export default __webpack_public_path__ + \"static/media/background-bottom.6be33a07.png\";","export default __webpack_public_path__ + \"static/media/background-top.1b9e0722.png\";","import styled from 'styled-components'\nimport backgroundBottom from './images/background-bottom.png'\nimport backgroundTop from './images/background-top.png'\n\nexport const AppBody = styled.div`\n  background-color: #373AF5;\n  background-image: url(${backgroundBottom}), url(${backgroundTop});\n  background-position: 0% 100%,100% 0%;\n  min-height: 100vh;\n`\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 84px 43px 16px 43px;\n  max-width: 1440px;\n  @media ${'(max-width: 730px)'} {\n    padding-top: 32px;\n  }\n`\n\nexport const Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n","import React, { FC } from 'react'\nimport { MainPage } from './pages/MainPage'\nimport { Container, AppBody } from './styles'\n\nconst App: FC = () => {\n  return (\n    <AppBody>\n      <Container>\n        <MainPage />\n      </Container>\n    </AppBody>\n  )\n}\n\nexport default App\n","import { handleActions } from 'redux-actions'\nimport { Weather, WeatherState } from './types'\nimport { saveWeathers, saveWeather } from './actions'\nimport { WeatherData } from '../../api'\n\nconst initialState: WeatherState = {\n  list: {}\n}\n\nexport const weatherReducer = handleActions<WeatherState, any>(\n  {\n    [`${saveWeathers}`]: (state, { payload }: { payload: Weather[] }) => {\n      return {\n        ...state,\n        list: {\n          samara: {\n            d: payload[0]\n          }\n        }\n      }\n    },\n    [`${saveWeather}`]: (state, { payload }: { payload: WeatherData }) => {\n      const { city, date, weather } = payload\n\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          [city]: {\n            ...state.list?.[city],\n            [date]: weather\n          }\n        }\n      }\n    }\n  },\n  initialState\n)\n","import { applyMiddleware, combineReducers, createStore, compose } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { persistStore, persistReducer } from \"redux-persist\"\nimport storage from 'redux-persist/lib/storage'\nimport { weatherReducer } from './weather/reducer'\n\nconst reducers = combineReducers({\n  weather: weatherReducer\n})\n\ntype ReducersType = typeof reducers\nexport type AppStateType = ReturnType<ReducersType>\n\nlet enhancer = applyMiddleware(thunkMiddleware)\n\nconst isDebug = process.env.NODE_ENV === 'development'\n// @ts-ignore\nif (isDebug && window.__REDUX_DEVTOOLS_EXTENSION__) {\n  // @ts-ignore\n  enhancer = compose(enhancer, window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage,\n }\n\nexport const store = createStore(persistReducer<any, any>(persistConfig, reducers), enhancer)\n\nexport const persistor = persistStore(store);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { store, persistor } from \"./redux/store\"\nimport { PersistGate } from \"redux-persist/integration/react\"\nimport { createGlobalStyle } from 'styled-components'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst Global = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-size: 16px;\n    color: #fff;\n    line-height: 24px;\n    font-family: Ubuntu;\n  }\n`\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n    <Global />\n    <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}